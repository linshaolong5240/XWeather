//
//  XWDEBUGData.swift
//  XWeather
//
//  Created by teenloong on 2022/5/22.
//  Copyright © 2022 com.teenloong. All rights reserved.
//

import Foundation
import XWeatherKit

struct XWDEBUGData {
    static let location = XWWeatherLocation(latitude: "26.07530", longitude: "119.30623", name: "福州")
    static let weatherNow = XWWeatherNow(description: "description", effectiveTemperature: XWTemperature(unit: .celsius, value: 27), humidity: 0.8, temperature: XWTemperature(unit: .celsius, value: 28), visibility: 0.9, weathType: .rain_showers_day, windInfo: .init(direct: .init(angle: 22.5), level: 2, speed: 60.5))
    static let weatherMinutely = XWWeatherMinutely(description: Optional("一小时后雨渐停"), precipitation: [0.125, 0.1279, 0.1304, 0.1318, 0.1317, 0.1296, 0.125, 0.1176, 0.1079, 0.0967, 0.0849, 0.0733, 0.0625, 0.0535, 0.047, 0.0438, 0.0448, 0.0507, 0.0625, 0.0803, 0.1025, 0.1266, 0.1503, 0.1714, 0.1875, 0.1969, 0.2006, 0.1999, 0.1965, 0.1919, 0.1875, 0.1846, 0.1832, 0.1831, 0.184, 0.1855, 0.1875, 0.1896, 0.1915, 0.1926, 0.1926, 0.1911, 0.1875, 0.1816, 0.1736, 0.1636, 0.1521, 0.1391, 0.125, 0.1102, 0.0956, 0.0825, 0.0718, 0.0648, 0.0625, 0.0654, 0.0711, 0.0767, 0.0792, 0.0754, 0.0625, 0.0386, 0.0064, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], probability: [0.9763544165036675, 0.9755385498393611, 0.04458727509649961, 0.0])
    
    static let weatherHourly: XWWeatherHourly = XWWeatherHourly(description: "未来24小时多云", hourly: Array(repeating: XWWeatherHourly.Hourly(apparentTemperature: XWTemperature(unit: .celsius, value: 27), aqi: XWWeatherAQIType.aqi(value: 20.0), cloudrate: 0.0, dswrf: 0.0, humidity: 0.8, precipitation: XWWeatherHourly.Precipitation(value: 0, probability: 0, updateDate: Date()), pressure: 100275.2, temperature: XWTemperature(unit: .celsius, value: 26), updateDate: Date(), visibility: 30.0, weather: XWWeatherType.clear_night, wind: XWWindInfo(direct: XWWindDirect(angle: 25), level: 2, speed: 30)), count: 24))
    
    static let weatherDaily: XWWeatherDaily = XWWeatherDaily(daily: [XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 40.0), temperatureMin: XWTemperature(unit: .celsius, value: 29.0), weathType: XWWeatherType.clear_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 40.0), temperatureMin: XWTemperature(unit: .celsius, value: 29.0), weathType: XWWeatherType.clear_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 40.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.2), weathType: XWWeatherType.cloudy_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 25.0), weathType: XWWeatherType.cloudy_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.0), weathType: XWWeatherType.moderate_rain, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.0), weathType: XWWeatherType.light_rain, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 27.0), weathType: XWWeatherType.cloudy_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 27.0), weathType: XWWeatherType.moderate_rain, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.0), weathType: XWWeatherType.moderate_rain, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.7), weathType: XWWeatherType.light_rain, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 39.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.0), weathType: XWWeatherType.light_rain, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 38.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.0), weathType: XWWeatherType.cloudy_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 38.0), temperatureMin: XWTemperature(unit: .celsius, value: 26.0), weathType: XWWeatherType.cloudy_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 38.0), temperatureMin: XWTemperature(unit: .celsius, value: 27.0), weathType: XWWeatherType.clear_day, updateDate: Date()), XWWeatherDaily.Daily(temperatureMax: XWTemperature(unit: .celsius, value: 38.0), temperatureMin: XWTemperature(unit: .celsius, value: 27.0), weathType: XWWeatherType.heavy_rain, updateDate: Date())])
}
